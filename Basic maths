Count the digit

         string numStr = to_string(n);
    		 int length = numStr.length();
    		 return length;


         Time Complexity->O(1)
         Space Complexity->O(1)


Reverse a number

         class Solution {
    public int reverse(int x) {
        long rev=0;
        while(x!=0){
            int rem=x%10;
           
            rev=rev*10+ rem;
            x/=10;
        }
        if(rev<Integer.MIN_VALUE || rev> Integer.MAX_VALUE){
            return 0;
        }
        else
            return (int) rev;
    }
}




Palindrome of a no.

    class Solution {
      public boolean isPalindrome(int x) {
          int n=x;
          long rev=0;
          if(n<0) return false;
          while(x!=0){
              int rem=x%10;
             
              rev=rev*10+ rem;
              x/=10;
          }
          if(rev==n) return true;
          else return false;
      }
  }


GCD of a no.
if(m==0){
            return n;
        }
        return calcGCD(m, n%m);
