Pattern no. 7 : Star Pyramid
     *
   * * *
 * * * * *

for (int i = 0; i < n; i++)//i->for row

        { //j-> column
                for (int j = 0; j < n-i-1; j++) {
                    System.out.print(" "); //loop for spaces
                }
                for (int j = 0; j < 2*i+1; j++) {
                    System.out.print("*");//to print the stars
                }
                for (int j = 0; j< n-i-1; j++) {
                    System.out.print(" "); //loop for spaces
                }
            System.out.println();
        }




Pattern no. 8 : Inverted Star Pyramid
 * * * * *
   * * *
     *


logic -> space, star, space
when n=3-> i=0-> 0,5,0
           i=1-> 1,3,1
           i=2-> 2,1,2
0 row -> 0 spaces

for (int i = 0; i<n; i++)//i->for row

        { //j-> column
                for (int j = 0; j < i; j++) {
                    System.out.print(" "); //loop for spaces
                }
                for (int j = 0; j< 2*n-(2*i+1); j++) {
                    System.out.print("*");//to print the stars
                }
                for (int j = 0; j<i; j++) {
                    System.out.print(" "); //loop for spaces
                }
            System.out.println();
        }



Pattern no. 9 : Diamond Star Pattern

     *
   * * *
 * * * * *
 * * * * *
   * * *
     *


  import java.util.Scanner;
public class Patterns
{
        static void pyramid(int n) {
            for (int i = 0; i < n; i++) { //j-> column
                for (int j = 0; j < n - i - 1; j++) {
                    System.out.print(" ");
                }
                for (int j = 0; j < 2 * i + 1; j++) {
                    System.out.print("*");
                }
                for (int j = 0; j < n - i - 1; j++) {
                    System.out.print(" ");
                }
                System.out.println();
            }
        }

        static void InvPyramid(int n) {
            for (int i = 0; i < n; i++) { //j-> column
                for (int j = 0; j < i; j++) {
                    System.out.print(" ");
                }
                for (int j = 0; j < 2 * n - (2 * i + 1); j++) {
                    System.out.print("*");
                }
                for (int j = 0; j < i; j++) {
                    System.out.print(" ");
                }
                System.out.println();
            }
        }

        public static void main(String[] args) {
            Scanner in = new Scanner(System.in);
            int n = in.nextInt();

            pyramid(n);
            InvPyramid(n);
        }
}
Pattern no. 10

Pattern no. 11

Pattern no. 12

Pattern no. 13

Pattern no. 14

Pattern no. 15

Pattern no. 16

Pattern no. 17

Pattern no. 18

Pattern no. 19

Pattern no. 20

Pattern no. 21

Pattern no. 22





SQL Questions that are needed to be revised

1. https://www.hackerrank.com/challenges/weather-observation-station-5/problem 
2.
