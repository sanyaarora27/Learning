/* example of pattern 1 : Rectangular Star Pattern
        * * *
        * * *
        * * *
*/

//ways to solve this

public static void main(String[] args) {
        Scanner in = new Scanner(System.in);

        int n = in.nextInt();

            for (int i = 0; i <n ; i++) {
                for (int j = 0; j <n; j++)
                {
                    System.out.print("* ");
                }
                System.out.println("");
            }
        }


/* example of pattern 2 : Right-Angled Triangle Pattern
          *
          * *
          * * *
*/

        for (int i = 0; i <n ; i++) {
            for (int j = 0; j <=i; j++)
            {
                System.out.print("* ");
            }
            System.out.println("");
        }
      }

/* example of pattern 3 : Right-Angled Triangle Pattern
          1
          1 2
          1 2 3
*/


        for (int i = 1; i <=n ; i++) {
            for (int j = 1; j <=i; j++)
            {
                System.out.print(j+" ");
            }
            System.out.println();
        }
        }


/* example of pattern 4 : Right-Angled Triangle Pattern
          1
          2 2
          3 3 3
*/

for (int i = 1; i <=n ; i++) {
            for (int j = 1; j <=i; j++)
            {
                System.out.print(i+" ");
            }
            System.out.println();
        }


/* example of pattern 5 : Inverted Right Pyramid Pattern
          * * * *
          * * *
          * *
          *
*/

        for (int i = n; i >0 ; i--) {
            for (int j = 0; j <i; j++)
            {
                System.out.print("* ");
            }
            System.out.println();
        }


/* example of pattern 6 : Inverted Right Pyramid Pattern
          1 2 3 4
          1 2 3
          1 2
          1
*/

for (int i = n; i >0 ; i--) {
            for (int j = 1; j <=i; j++)
            {
                System.out.print(j+ " ");
            }
            System.out.println();
        }


/* example of pattern 7 : Right-Angled Triangle Pattern
             *
            * *
           * * *
*/



